{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAddMovie","useState","setMovie","setQuery","hasError","setHasError","isLoading","setIsLoading","handleFindMovie","event","a","preventDefault","trim","length","newMovieFromServer","Poster","Title","Plot","imdbID","newMovie","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","every","m","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f358daff.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a535e5a9';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n    setQuery(event.target.value);\n  };\n\n  const handleFindMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const isInvalidQuery = !query || query.trim().length === 0;\n\n    if (isInvalidQuery) {\n      setIsLoading(false);\n      throw new Error('Invalid query');\n    }\n\n    const newMovieFromServer = await getMovie(query);\n\n    if ('Error' in newMovieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n\n      return;\n    }\n\n    const {\n      Poster,\n      Title,\n      Plot,\n      imdbID,\n    } = newMovieFromServer;\n\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster !== 'N/A'\n        ? Poster\n        : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n\n    setMovie(newMovie);\n    setIsLoading(false);\n  };\n\n  const handleClearMovie = () => {\n    setQuery('');\n    setMovie(null);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n    }\n\n    handleClearMovie();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    const uniqueMovie = movies.every((m) => m.imdbId !== movie.imdbId);\n\n    if (uniqueMovie) {\n      setMovies((prevMovies) => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}